{"ast":null,"code":"import _toConsumableArray from \"/Users/chriswoolnough/flatiron/MOD4/project/gameswap_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/chriswoolnough/flatiron/MOD4/project/gameswap_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chriswoolnough/flatiron/MOD4/project/gameswap_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chriswoolnough/flatiron/MOD4/project/gameswap_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chriswoolnough/flatiron/MOD4/project/gameswap_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chriswoolnough/flatiron/MOD4/project/gameswap_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chriswoolnough/flatiron/MOD4/project/gameswap_frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport Note from './components/Note';\nimport './App.css';\nimport PokemonContainer from './containers/PokemonContainer';\nvar URL = 'https://pokeapi.co/api/v2/pokemon';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      noteText: '',\n      images: '',\n      notes: [],\n      pokemon: []\n    };\n\n    _this.fetchGame = function () {\n      fetch(URL).then(function (resp) {\n        return resp.json();\n      }).then(function (result) {\n        return _this.setState({\n          pokemon: result.results\n        });\n      });\n    };\n\n    _this.handleKeyPress = function (event) {\n      if (event.key === 'Enter') {\n        // let notesArr = this.state.notes\n        // notesArr.push(this.state.noteText)\n        var notesArr = [].concat(_toConsumableArray(_this.state.notes), [_this.state.noteText]);\n\n        _this.setState({\n          noteText: '',\n          notes: notesArr\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchGame();\n    }\n  }, {\n    key: \"updateNoteText\",\n    value: function updateNoteText(noteText) {\n      this.setState({\n        noteText: noteText.target.value\n      });\n    }\n  }, {\n    key: \"addNote\",\n    value: function addNote() {\n      if (this.state.noteText === '') {\n        return;\n      }\n\n      var notesArr = [].concat(_toConsumableArray(this.state.notes), [this.state.noteText]);\n      this.setState({\n        noteText: '',\n        notes: notesArr\n      });\n      this.textInput.focus();\n    }\n  }, {\n    key: \"deleteNote\",\n    value: function deleteNote(index) {\n      var notesArr = this.state.notes;\n      notesArr.splice(index, 1);\n      this.setState({\n        notes: notesArr\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var notes = this.state.notes.map(function (val, key) {\n        return React.createElement(Note, {\n          key: key,\n          text: val,\n          deleteMethod: function deleteMethod() {\n            return _this2.deleteNote(key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"PokeSwap\"), notes, React.createElement(PokemonContainer, {\n        allPokemon: this.state.pokemon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"btn\",\n        onClick: this.addNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"./pokeball.png\",\n        width: \"30px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"text\",\n        ref: function ref(input) {\n          _this2.textInput = input;\n        },\n        className: \"textInput\",\n        value: this.state.noteText,\n        onChange: function onChange(noteText) {\n          return _this2.updateNoteText(noteText);\n        },\n        onKeyPress: this.handleKeyPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/chriswoolnough/flatiron/MOD4/project/gameswap_frontend/src/App.js"],"names":["React","Component","Note","PokemonContainer","URL","App","state","noteText","images","notes","pokemon","fetchGame","fetch","then","resp","json","result","setState","results","handleKeyPress","event","key","notesArr","target","value","textInput","focus","index","splice","map","val","deleteNote","addNote","input","updateNoteText"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Note from './components/Note'\nimport './App.css';\nimport PokemonContainer from './containers/PokemonContainer'\nconst URL = 'https://pokeapi.co/api/v2/pokemon'\n\n\n\nclass App extends Component {\n\n    state = {\n      noteText: '',\n      images: '',\n      notes: [],\n      pokemon: []\n    }\n\n    componentDidMount() {\n      this.fetchGame()\n    }\n\n  fetchGame= () => {\n    fetch(URL)\n    .then(resp => resp.json())\n    .then(result => this.setState({\n        pokemon: result.results\n      })\n    )\n  }\n\n    updateNoteText(noteText) {\n      this.setState({\n        noteText: noteText.target.value\n      })\n    }\n\n    addNote() {\n      if (this.state.noteText === '') {return}\n\n      const notesArr = [...this.state.notes, this.state.noteText]\n\n      this.setState({\n        noteText: '',\n        notes: notesArr\n      })\n\n      this.textInput.focus()\n    }\n\n    handleKeyPress = (event) => {\n      if(event.key === 'Enter') {\n          // let notesArr = this.state.notes\n          // notesArr.push(this.state.noteText)\n          const notesArr = [...this.state.notes, this.state.noteText]\n\n          this.setState({\n            noteText: '',\n            notes: notesArr\n          })\n      }\n    }\n\n    deleteNote(index) {\n      let notesArr = this.state.notes\n      notesArr.splice(index, 1)\n      this.setState({ notes: notesArr })\n    }\n\n  render() {\n\n    let notes = this.state.notes.map((val, key) => {\n      return <Note key={key} text={val}\n              deleteMethod ={() => this.deleteNote(key) } />\n    })\n\n    return (\n      <div className=\"container\">\n        <div className=\"header\">PokeSwap</div>\n        {notes}\n\n        <PokemonContainer allPokemon={this.state.pokemon} />\n\n        <div className=\"btn\" onClick={this.addNote}><img src='./pokeball.png' width='30px' /></div>\n\n        <input type=\"text\"\n          ref={((input) => {this.textInput = input})}\n          className=\"textInput\"\n          value={this.state.noteText}\n          onChange={noteText => this.updateNoteText(noteText)}\n          onKeyPress={this.handleKeyPress}\n          />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}